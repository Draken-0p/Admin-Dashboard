{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar typeDefs_1 = require(\"./typeDefs\");\n\nvar useInjectScript_1 = require(\"./useInjectScript\");\n\nfunction useDrivePicker() {\n  var defaultScopes = ['https://www.googleapis.com/auth/drive.readonly'];\n\n  var _a = (0, useInjectScript_1.useInjectScript)(),\n      loaded = _a[0],\n      error = _a[1];\n\n  var _b = (0, react_1.useState)(false),\n      pickerApiLoaded = _b[0],\n      setpickerApiLoaded = _b[1];\n\n  var _c = (0, react_1.useState)(false),\n      openAfterAuth = _c[0],\n      setOpenAfterAuth = _c[1];\n\n  var _d = (0, react_1.useState)(false),\n      authWindowVisible = _d[0],\n      setAuthWindowVisible = _d[1];\n\n  var _e = (0, react_1.useState)(typeDefs_1.defaultConfiguration),\n      config = _e[0],\n      setConfig = _e[1];\n\n  var _f = (0, react_1.useState)(),\n      authRes = _f[0],\n      setAuthRes = _f[1]; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  var picker; // get the apis from googleapis\n\n  (0, react_1.useEffect)(function () {\n    if (loaded && !error && !pickerApiLoaded) {\n      loadApis();\n    }\n  }, [loaded, error, pickerApiLoaded]); // use effect to open picker after auth\n\n  (0, react_1.useEffect)(function () {\n    if (openAfterAuth && config.token && loaded && !error && pickerApiLoaded) {\n      createPicker(config);\n      setOpenAfterAuth(false);\n    }\n  }, [openAfterAuth, config.token, loaded, error, pickerApiLoaded]); // open the picker\n\n  var openPicker = function (config) {\n    // global scope given conf\n    setConfig(config); // if we didnt get token generate token.\n\n    if (!config.token) {\n      setAuthWindowVisible(true);\n    } // if we have token and everything is loaded open the picker\n\n\n    if (config.token && loaded && !error && pickerApiLoaded) {\n      return createPicker(config);\n    }\n  }; // load the Drive picker api\n\n\n  var loadApis = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.gapi.load('auth'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    window.gapi.load('picker', {\n      callback: onPickerApiLoad\n    });\n  };\n\n  var onPickerApiLoad = function () {\n    setpickerApiLoaded(true);\n  }; // Open auth window after given config state is ready\n\n\n  (0, react_1.useEffect)(function () {\n    if (authWindowVisible) {\n      window.gapi.auth.authorize({\n        client_id: config.clientId,\n        scope: config.customScopes ? __spreadArray(__spreadArray([], defaultScopes, true), config.customScopes, true) : defaultScopes,\n        immediate: false\n      }, handleAuthResult);\n    }\n  }, [authWindowVisible]);\n\n  var handleAuthResult = function (authResult) {\n    setAuthWindowVisible(false);\n\n    if (authResult && !authResult.error) {\n      setAuthRes(authResult);\n      setConfig(function (prev) {\n        return __assign(__assign({}, prev), {\n          token: authResult.access_token\n        });\n      });\n      setOpenAfterAuth(true);\n    }\n  };\n\n  var createPicker = function (_a) {\n    var token = _a.token,\n        _b = _a.appId,\n        appId = _b === void 0 ? '' : _b,\n        _c = _a.supportDrives,\n        supportDrives = _c === void 0 ? false : _c,\n        developerKey = _a.developerKey,\n        _d = _a.viewId,\n        viewId = _d === void 0 ? 'DOCS' : _d,\n        disabled = _a.disabled,\n        multiselect = _a.multiselect,\n        _e = _a.showUploadView,\n        showUploadView = _e === void 0 ? false : _e,\n        showUploadFolders = _a.showUploadFolders,\n        _f = _a.setParentFolder,\n        setParentFolder = _f === void 0 ? '' : _f,\n        viewMimeTypes = _a.viewMimeTypes,\n        customViews = _a.customViews,\n        _g = _a.locale,\n        locale = _g === void 0 ? 'en' : _g,\n        setIncludeFolders = _a.setIncludeFolders,\n        setSelectFolderEnabled = _a.setSelectFolderEnabled,\n        _h = _a.disableDefaultView,\n        disableDefaultView = _h === void 0 ? false : _h,\n        callbackFunction = _a.callbackFunction;\n    if (disabled) return false;\n    var view = new google.picker.DocsView(google.picker.ViewId[viewId]);\n    if (viewMimeTypes) view.setMimeTypes(viewMimeTypes);\n    if (setIncludeFolders) view.setSelectFolderEnabled(true);\n    if (setSelectFolderEnabled) view.setSelectFolderEnabled(true);\n    var uploadView = new google.picker.DocsUploadView();\n    if (viewMimeTypes) uploadView.setMimeTypes(viewMimeTypes);\n    if (showUploadFolders) uploadView.setIncludeFolders(true);\n    if (setParentFolder) uploadView.setParent(setParentFolder);\n    picker = new google.picker.PickerBuilder().setAppId(appId).setOAuthToken(token).setDeveloperKey(developerKey).setLocale(locale).setCallback(callbackFunction);\n\n    if (!disableDefaultView) {\n      picker.addView(view);\n    }\n\n    if (customViews) {\n      customViews.map(function (view) {\n        return picker.addView(view);\n      });\n    }\n\n    if (multiselect) {\n      picker.enableFeature(google.picker.Feature.MULTISELECT_ENABLED);\n    }\n\n    if (showUploadView) picker.addView(uploadView);\n\n    if (supportDrives) {\n      picker.enableFeature(google.picker.Feature.SUPPORT_DRIVES);\n    }\n\n    picker.build().setVisible(true);\n    return true;\n  };\n\n  return [openPicker, authRes];\n}\n\nexports.default = useDrivePicker;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AACA;;AAKA;;AAEA,SAAwBA,cAAxB,GAAsC;EAIpC,IAAMC,aAAa,GAAG,CAAC,gDAAD,CAAtB;;EACM,SAAkB,wCAAlB;EAAA,IAACC,MAAM,QAAP;EAAA,IAASC,KAAK,QAAd;;EACA,SAAwC,sBAAS,KAAT,CAAxC;EAAA,IAACC,eAAe,QAAhB;EAAA,IAAkBC,kBAAkB,QAApC;;EACA,SAAoC,sBAAS,KAAT,CAApC;EAAA,IAACC,aAAa,QAAd;EAAA,IAAgBC,gBAAgB,QAAhC;;EACA,SAA4C,sBAAS,KAAT,CAA5C;EAAA,IAACC,iBAAiB,QAAlB;EAAA,IAAoBC,oBAAoB,QAAxC;;EACA,SACJ,sBAA8BC,+BAA9B,CADI;EAAA,IAACC,MAAM,QAAP;EAAA,IAASC,SAAS,QAAlB;;EAEA,SAAwB,uBAAxB;EAAA,IAACC,OAAO,QAAR;EAAA,IAAUC,UAAU,QAApB,CAX8B,CAapC;;;EACA,IAAIC,MAAJ,CAdoC,CAgBpC;;EACA,uBAAU;IACR,IAAIb,MAAM,IAAI,CAACC,KAAX,IAAoB,CAACC,eAAzB,EAA0C;MACxCY,QAAQ;IACT;EACF,CAJD,EAIG,CAACd,MAAD,EAASC,KAAT,EAAgBC,eAAhB,CAJH,EAjBoC,CAuBpC;;EACA,uBAAU;IACR,IAAIE,aAAa,IAAIK,MAAM,CAACM,KAAxB,IAAiCf,MAAjC,IAA2C,CAACC,KAA5C,IAAqDC,eAAzD,EAA0E;MACxEc,YAAY,CAACP,MAAD,CAAZ;MACAJ,gBAAgB,CAAC,KAAD,CAAhB;IACD;EACF,CALD,EAKG,CAACD,aAAD,EAAgBK,MAAM,CAACM,KAAvB,EAA8Bf,MAA9B,EAAsCC,KAAtC,EAA6CC,eAA7C,CALH,EAxBoC,CA+BpC;;EACA,IAAMe,UAAU,GAAG,UAACR,MAAD,EAA4B;IAC7C;IACAC,SAAS,CAACD,MAAD,CAAT,CAF6C,CAI7C;;IACA,IAAI,CAACA,MAAM,CAACM,KAAZ,EAAmB;MACjBR,oBAAoB,CAAC,IAAD,CAApB;IACD,CAP4C,CAS7C;;;IACA,IAAIE,MAAM,CAACM,KAAP,IAAgBf,MAAhB,IAA0B,CAACC,KAA3B,IAAoCC,eAAxC,EAAyD;MACvD,OAAOc,YAAY,CAACP,MAAD,CAAnB;IACD;EACF,CAbD,CAhCoC,CA+CpC;;;EACA,IAAMK,QAAQ,GAAG;IACf;IACAI,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,MAAjB,EAFe,CAGf;;IACAF,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,QAAjB,EAA2B;MAAEC,QAAQ,EAAEC;IAAZ,CAA3B;EACD,CALD;;EAOA,IAAMA,eAAe,GAAG;IACtBnB,kBAAkB,CAAC,IAAD,CAAlB;EACD,CAFD,CAvDoC,CA2DpC;;;EACA,uBAAU;IACR,IAAIG,iBAAJ,EAAuB;MACrBY,MAAM,CAACC,IAAP,CAAYI,IAAZ,CAAiBC,SAAjB,CACE;QACEC,SAAS,EAAEhB,MAAM,CAACiB,QADpB;QAEEC,KAAK,EAAElB,MAAM,CAACmB,YAAP,GACJC,gCAAK9B,aAAL,EAAkB,IAAlB,GAAuBU,MAAM,CAACmB,YAA9B,EAA0C,IAA1C,CADI,GAEH7B,aAJN;QAKE+B,SAAS,EAAE;MALb,CADF,EAQEC,gBARF;IAUD;EACF,CAbD,EAaG,CAACzB,iBAAD,CAbH;;EAeA,IAAMyB,gBAAgB,GAAG,UAACC,UAAD,EAAuB;IAC9CzB,oBAAoB,CAAC,KAAD,CAApB;;IACA,IAAIyB,UAAU,IAAI,CAACA,UAAU,CAAC/B,KAA9B,EAAqC;MACnCW,UAAU,CAACoB,UAAD,CAAV;MACAtB,SAAS,CAAC,UAACuB,IAAD,EAAK;QAAK,6BAAMA,IAAN,GAAU;UAAElB,KAAK,EAAEiB,UAAU,CAACE;QAApB,CAAV;MAA6C,CAAxD,CAAT;MACA7B,gBAAgB,CAAC,IAAD,CAAhB;IACD;EACF,CAPD;;EASA,IAAMW,YAAY,GAAG,UAACmB,EAAD,EAkBC;QAjBpBpB,KAAK;QACLqB;QAAAC,KAAK,mBAAG,EAAH,GAAKD;QACVE;QAAAC,aAAa,mBAAG,KAAH,GAAQD;QACrBE,YAAY;QACZC;QAAAC,MAAM,mBAAG,MAAH,GAASD;QACfE,QAAQ;QACRC,WAAW;QACXC;QAAAC,cAAc,mBAAG,KAAH,GAAQD;QACtBE,iBAAiB;QACjBC;QAAAC,eAAe,mBAAG,EAAH,GAAKD;QACpBE,aAAa;QACbC,WAAW;QACXC;QAAAC,MAAM,mBAAG,IAAH,GAAOD;QACbE,iBAAiB;QACjBC,sBAAsB;QACtBC;QAAAC,kBAAkB,mBAAG,KAAH,GAAQD;QAC1BE,gBAAgB;IAEhB,IAAIf,QAAJ,EAAc,OAAO,KAAP;IAEd,IAAMgB,IAAI,GAAG,IAAIC,MAAM,CAAC/C,MAAP,CAAcgD,QAAlB,CAA2BD,MAAM,CAAC/C,MAAP,CAAciD,MAAd,CAAqBpB,MAArB,CAA3B,CAAb;IACA,IAAIQ,aAAJ,EAAmBS,IAAI,CAACI,YAAL,CAAkBb,aAAlB;IACnB,IAAII,iBAAJ,EAAuBK,IAAI,CAACJ,sBAAL,CAA4B,IAA5B;IACvB,IAAIA,sBAAJ,EAA4BI,IAAI,CAACJ,sBAAL,CAA4B,IAA5B;IAE5B,IAAMS,UAAU,GAAG,IAAIJ,MAAM,CAAC/C,MAAP,CAAcoD,cAAlB,EAAnB;IACA,IAAIf,aAAJ,EAAmBc,UAAU,CAACD,YAAX,CAAwBb,aAAxB;IACnB,IAAIH,iBAAJ,EAAuBiB,UAAU,CAACV,iBAAX,CAA6B,IAA7B;IACvB,IAAIL,eAAJ,EAAqBe,UAAU,CAACE,SAAX,CAAqBjB,eAArB;IAErBpC,MAAM,GAAG,IAAI+C,MAAM,CAAC/C,MAAP,CAAcsD,aAAlB,GACNC,QADM,CACG/B,KADH,EAENgC,aAFM,CAEQtD,KAFR,EAGNuD,eAHM,CAGU9B,YAHV,EAIN+B,SAJM,CAIIlB,MAJJ,EAKNmB,WALM,CAKMd,gBALN,CAAT;;IAOA,IAAI,CAACD,kBAAL,EAAyB;MACvB5C,MAAM,CAAC4D,OAAP,CAAed,IAAf;IACD;;IAED,IAAIR,WAAJ,EAAiB;MACfA,WAAW,CAACuB,GAAZ,CAAgB,UAACf,IAAD,EAAK;QAAK,aAAM,CAACc,OAAP,CAAed,IAAf;MAAoB,CAA9C;IACD;;IAED,IAAIf,WAAJ,EAAiB;MACf/B,MAAM,CAAC8D,aAAP,CAAqBf,MAAM,CAAC/C,MAAP,CAAc+D,OAAd,CAAsBC,mBAA3C;IACD;;IAED,IAAI/B,cAAJ,EAAoBjC,MAAM,CAAC4D,OAAP,CAAeT,UAAf;;IAEpB,IAAIzB,aAAJ,EAAmB;MACjB1B,MAAM,CAAC8D,aAAP,CAAqBf,MAAM,CAAC/C,MAAP,CAAc+D,OAAd,CAAsBE,cAA3C;IACD;;IAEDjE,MAAM,CAACkE,KAAP,GAAeC,UAAf,CAA0B,IAA1B;IACA,OAAO,IAAP;EACD,CA1DD;;EA4DA,OAAO,CAAC/D,UAAD,EAAaN,OAAb,CAAP;AACD;;AAjJDsE","names":["useDrivePicker","defaultScopes","loaded","error","pickerApiLoaded","setpickerApiLoaded","openAfterAuth","setOpenAfterAuth","authWindowVisible","setAuthWindowVisible","typeDefs_1","config","setConfig","authRes","setAuthRes","picker","loadApis","token","createPicker","openPicker","window","gapi","load","callback","onPickerApiLoad","auth","authorize","client_id","clientId","scope","customScopes","__spreadArray","immediate","handleAuthResult","authResult","prev","access_token","_a","_b","appId","_c","supportDrives","developerKey","_d","viewId","disabled","multiselect","_e","showUploadView","showUploadFolders","_f","setParentFolder","viewMimeTypes","customViews","_g","locale","setIncludeFolders","setSelectFolderEnabled","_h","disableDefaultView","callbackFunction","view","google","DocsView","ViewId","setMimeTypes","uploadView","DocsUploadView","setParent","PickerBuilder","setAppId","setOAuthToken","setDeveloperKey","setLocale","setCallback","addView","map","enableFeature","Feature","MULTISELECT_ENABLED","SUPPORT_DRIVES","build","setVisible","exports"],"sources":["../src/index.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}