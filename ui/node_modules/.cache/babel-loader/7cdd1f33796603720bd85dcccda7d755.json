{"ast":null,"code":"var _jsxFileName = \"D:\\\\port\\\\dashboard\\\\ui\\\\src\\\\Dashboard.jsx\";\nimport React from 'react';\nimport './dashboard.css';\nimport { Flex, Avatar, Box, Text, Badge } from '@chakra-ui/react';\nimport Details from './Details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    direction: \"column\",\n    w: \"100%\",\n    px: \"0px\",\n    overflowX: {\n      sm: \"scroll\",\n      lg: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      px: \"25px\",\n      justify: \"space-between\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: textColor,\n        fontSize: \"22px\",\n        fontWeight: \"700\",\n        lineHeight: \"100%\",\n        children: \"Check Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n      variant: \"simple\",\n      color: \"gray.500\",\n      mb: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: headerGroups.map((headerGroup, index) => /*#__PURE__*/_createElement(Tr, { ...headerGroup.getHeaderGroupProps(),\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, headerGroup.headers.map((column, index) => /*#__PURE__*/_createElement(Th, { ...column.getHeaderProps(column.getSortByToggleProps()),\n          pe: \"10px\",\n          key: index,\n          borderColor: borderColor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          align: \"center\",\n          fontSize: {\n            sm: \"10px\",\n            lg: \"12px\"\n          },\n          color: \"gray.400\",\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)))))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, { ...getTableBodyProps(),\n        children: page.map((row, index) => {\n          prepareRow(row);\n          return /*#__PURE__*/_createElement(Tr, { ...row.getRowProps(),\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }\n          }, row.cells.map((cell, index) => {\n            let data = \"\";\n\n            if (cell.column.Header === \"NAME\") {\n              data = /*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  defaultChecked: cell.value[1],\n                  colorScheme: \"brandScheme\",\n                  me: \"10px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  color: textColor,\n                  fontSize: \"sm\",\n                  fontWeight: \"700\",\n                  children: cell.value[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this);\n            } else if (cell.column.Header === \"PROGRESS\") {\n              data = /*#__PURE__*/_jsxDEV(Flex, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  me: \"10px\",\n                  color: textColor,\n                  fontSize: \"sm\",\n                  fontWeight: \"700\",\n                  children: [cell.value, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this);\n            } else if (cell.column.Header === \"QUANTITY\") {\n              data = /*#__PURE__*/_jsxDEV(Text, {\n                color: textColor,\n                fontSize: \"sm\",\n                fontWeight: \"700\",\n                children: cell.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this);\n            } else if (cell.column.Header === \"DATE\") {\n              data = /*#__PURE__*/_jsxDEV(Text, {\n                color: textColor,\n                fontSize: \"sm\",\n                fontWeight: \"700\",\n                children: cell.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this);\n            }\n\n            return /*#__PURE__*/_createElement(Td, { ...cell.getCellProps(),\n              key: index,\n              fontSize: {\n                sm: \"14px\"\n              },\n              minW: {\n                sm: \"150px\",\n                md: \"200px\",\n                lg: \"auto\"\n              },\n              borderColor: \"transparent\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }\n            }, data);\n          }));\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Flex","Avatar","Box","Text","Badge","Details","Dashboard","sm","lg","textColor","getTableProps","headerGroups","map","headerGroup","index","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","borderColor","render","getTableBodyProps","page","row","prepareRow","getRowProps","cells","cell","data","Header","value","getCellProps","md"],"sources":["D:/port/dashboard/ui/src/Dashboard.jsx"],"sourcesContent":["import React from 'react'\r\nimport './dashboard.css'\r\nimport {\r\n\r\n    Flex,\r\n    Avatar,\r\n    Box,\r\n    Text,\r\n    Badge,\r\n  } from '@chakra-ui/react'\r\nimport Details from './Details'\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <Card\r\n    direction='column'\r\n    w='100%'\r\n    px='0px'\r\n    overflowX={{ sm: \"scroll\", lg: \"hidden\" }}>\r\n    <Flex px='25px' justify='space-between' align='center'>\r\n      <Text\r\n        color={textColor}\r\n        fontSize='22px'\r\n        fontWeight='700'\r\n        lineHeight='100%'>\r\n        Check Table\r\n      </Text>\r\n      <Menu />\r\n    </Flex>\r\n    <Table {...getTableProps()} variant='simple' color='gray.500' mb='24px'>\r\n      <Thead>\r\n        {headerGroups.map((headerGroup, index) => (\r\n          <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n            {headerGroup.headers.map((column, index) => (\r\n              <Th\r\n                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                pe='10px'\r\n                key={index}\r\n                borderColor={borderColor}>\r\n                <Flex\r\n                  justify='space-between'\r\n                  align='center'\r\n                  fontSize={{ sm: \"10px\", lg: \"12px\" }}\r\n                  color='gray.400'>\r\n                  {column.render(\"Header\")}\r\n                </Flex>\r\n              </Th>\r\n            ))}\r\n          </Tr>\r\n        ))}\r\n      </Thead>\r\n      <Tbody {...getTableBodyProps()}>\r\n        {page.map((row, index) => {\r\n          prepareRow(row);\r\n          return (\r\n            <Tr {...row.getRowProps()} key={index}>\r\n              {row.cells.map((cell, index) => {\r\n                let data = \"\";\r\n                if (cell.column.Header === \"NAME\") {\r\n                  data = (\r\n                    <Flex align='center'>\r\n                      <Checkbox\r\n                        defaultChecked={cell.value[1]}\r\n                        colorScheme='brandScheme'\r\n                        me='10px'\r\n                      />\r\n                      <Text color={textColor} fontSize='sm' fontWeight='700'>\r\n                        {cell.value[0]}\r\n                      </Text>\r\n                    </Flex>\r\n                  );\r\n                } else if (cell.column.Header === \"PROGRESS\") {\r\n                  data = (\r\n                    <Flex align='center'>\r\n                      <Text\r\n                        me='10px'\r\n                        color={textColor}\r\n                        fontSize='sm'\r\n                        fontWeight='700'>\r\n                        {cell.value}%\r\n                      </Text>\r\n                    </Flex>\r\n                  );\r\n                } else if (cell.column.Header === \"QUANTITY\") {\r\n                  data = (\r\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\r\n                      {cell.value}\r\n                    </Text>\r\n                  );\r\n                } else if (cell.column.Header === \"DATE\") {\r\n                  data = (\r\n                    <Text color={textColor} fontSize='sm' fontWeight='700'>\r\n                      {cell.value}\r\n                    </Text>\r\n                  );\r\n                }\r\n                return (\r\n                  <Td\r\n                    {...cell.getCellProps()}\r\n                    key={index}\r\n                    fontSize={{ sm: \"14px\" }}\r\n                    minW={{ sm: \"150px\", md: \"200px\", lg: \"auto\" }}\r\n                    borderColor='transparent'>\r\n                    {data}\r\n                  </Td>\r\n                );\r\n              })}\r\n            </Tr>\r\n          );\r\n        })}\r\n      </Tbody>\r\n    </Table>\r\n  </Card>\r\n  );\r\n}\r\n\r\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}